name: Build Nix Flake

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-macos:
    timeout-minutes: 15
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          primary-key: build-${{ runner.os }}-${{ hashFiles('**/flake.nix', '**/flake.lock') }}
          # paths: |
          #   ~/.npm
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: build-${{ runner.os }}-
          # created more than 0 seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never

      - name: Check Minimal Nix Flake
        run: nix develop ./macos --command sudo darwin-rebuild check --flake ./macos#minimal

      - name: Build Minimal Nix Flake
        run: nix develop ./macos --command darwin-rebuild build --flake ./macos#minimal

      - name: Check Default Nix Flake
        run: nix develop ./macos --command sudo darwin-rebuild check --flake ./macos#default

      - name: Build Default Nix Flake
        run: nix develop ./macos --command darwin-rebuild build --flake ./macos#default

      - name: Switch to Nix Flake
        run: |
          sudo mv /etc/nix/nix.conf /etc/nix/nix.conf.before-nix-darwin

          nix --extra-experimental-features 'nix-command flakes' \
            develop ./macos --command sudo darwin-rebuild \
            switch --flake ./macos#minimal
